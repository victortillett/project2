
/**/
Select S.student_id,PS.course_grade
FROM Student AS S 
JOIN program_status AS PS
ON S.student_id=PS.student_id
WHERE PS.course_grade = 'F';


SELECT i.instructor_name, COUNT(*) AS num_courses_taught
FROM instructors i
JOIN courses c ON i.instructor_id = c.instructor_id
GROUP BY i.instructor_name
ORDER BY num_courses_taught DESC;


SELECT s.student_id, s.school_id, s.program_id, p.program_name, ps.course_grade
FROM student AS s
JOIN completion As C
ON s.student_id = c.student_id
JOIN programs AS p 
ON s.program_id = p.program_id
JOIN faculties AS f 
ON p.faculty_id = f.faculty_id
JOIN program_status  AS ps 
ON s.student_id = ps.student_id 
WHERE f.faculty_id= 'FST' AND ps.course_grade = 'B'

SELECT AVG(course_points) AS avg_grade 
FROM program_status ps 
JOIN student s 
ON ps.student_id = s.student_id 
JOIN programs p 
ON s.program_id = p.program_id 
WHERE s.gender = 'F' AND p.program_id = 'AINT';

SELECT PS.student_id, PS.course_grade, PS.course_points, PS.semester, C.course_id, C.code, C.title
 FROM program_status AS PS 
 JOIN courses AS C 
 ON PS.course_id = C.course_id 
 WHERE PS.student_id = 4538;

 SELECT * FROM student WHERE student_id NOT IN (SELECT student_id FROM completion);




 -- Teacher Sent Queries


SELECT S.school_id, SC.school_name, AVG(student_avg_course_points) as avg_course_points, COUNT(*) as student_count
FROM student AS S
JOIN school AS SC ON S.school_id = SC.school_id
JOIN (
    SELECT student_id, AVG(course_points) as student_avg_course_points
    FROM program_status
    GROUP BY student_id
) AS PS
ON S.student_id = PS.student_id
GROUP BY S.school_id, SC.school_name
ORDER BY avg_course_points DESC;

-- Find the total number of students and average course points by gender.
SELECT gender, AVG(student_avg_course_points) as avg_course_points, COUNT(*) as student_count
FROM (
    SELECT S.gender, AVG(PS.course_points) as student_avg_course_points
    FROM student AS S
    JOIN program_status AS PS
    ON S.student_id = PS.student_id
    GROUP BY S.student_id
) AS student_avg
GROUP BY gender;

--Find the total number of students and average course points by ethnicity.
SELECT ethinicity, AVG(student_avg_course_points) as avg_course_points, COUNT(*) as student_count
FROM (
    SELECT S.ethinicity, AVG(PS.course_points) as student_avg_course_points
    FROM student AS S
    JOIN program_status AS PS
    ON S.student_id = PS.student_id
    GROUP BY S.student_id
) AS student_avg
GROUP BY ethinicity
ORDER BY avg_course_points DESC;

-- Find the total number of students and average course points by city.
SELECT city, AVG(student_avg_course_points) as avg_course_points, COUNT(*) as student_count
FROM (
    SELECT S.city, AVG(PS.course_points) as student_avg_course_points
    FROM student AS S
    JOIN program_status AS PS
    ON S.student_id = PS.student_id
    GROUP BY S.student_id
) AS student_avg
GROUP BY city
ORDER BY avg_course_points DESC;

--Find the total number of students and average course points by district.
SELECT district, AVG(student_avg_course_points) as avg_course_points, COUNT(*) as student_count
FROM (
    SELECT S.district, AVG(PS.course_points) as student_avg_course_points
    FROM student AS S
    JOIN program_status AS PS
    ON S.student_id = PS.student_id
    GROUP BY S.student_id
) AS student_avg
GROUP BY district
ORDER BY avg_course_points DESC;

--Find the total number and percentage of students by program status.
SELECT program_status, COUNT(DISTINCT PS.student_id) as student_count,
COUNT(DISTINCT PS.student_id)*100.0/(SELECT COUNT(DISTINCT student_id)
FROM program_status) AS student_percent
FROM program_status AS PS
GROUP BY program_status;

--Find the letter grade breakdown (how many A, A-,B,B+,...)for each of the following courses:
--Fundamentals of Computing 
--Principles of Programming I 
--Algebra 
--Trigonometry 
--College English I 

SELECT C.course_title, PS.course_grade, COUNT(*) as grade_count
FROM program_status AS PS
JOIN course AS C ON PS.course_id = C.course_id
WHERE C.course_id = 11
GROUP BY C.course_title, PS.course_grade
ORDER BY C.course_title, grade_count DESC;

SELECT C.course_title, PS.course_grade, COUNT(*) as grade_count
FROM program_status AS PS
JOIN course AS C ON PS.course_id = C.course_id
WHERE C.course_id = 45
GROUP BY C.course_title, PS.course_grade
ORDER BY C.course_title, grade_count DESC;
UNION
SELECT C.course_title, PS.course_grade, COUNT(*) as grade_count
FROM program_status AS PS
JOIN course AS C ON PS.course_id = C.course_id
WHERE C.course_id = 47
GROUP BY C.course_title, PS.course_grade
ORDER BY C.course_title, grade_count DESC;

SELECT C.course_title, PS.course_grade, COUNT(*) as grade_count
FROM program_status AS PS
JOIN course AS C ON PS.course_id = C.course_id
WHERE C.course_id = 50
GROUP BY C.course_title, PS.course_grade
ORDER BY C.course_title, grade_count DESC;

SELECT C.course_title, PS.course_grade, COUNT(*) as grade_count
FROM program_status AS PS
JOIN course AS C ON PS.course_id = C.course_id
WHERE C.course_id = 48
GROUP BY C.course_title, PS.course_grade
ORDER BY C.course_title, grade_count DESC;

SELECT C.course_title, PS.course_grade, COUNT(*) as grade_count
FROM program_status AS PS
JOIN course AS C ON PS.course_id = C.course_id
WHERE C.course_id = 44
GROUP BY C.course_title, PS.course_grade
ORDER BY C.course_title, grade_count DESC;

SELECT C.title, PS.course_grade, COUNT(*) as grade_count FROM program_status AS PS JOIN courses AS C ON PS.course_id = C.course_id WHERE C.course_id = 46 GROUP BY C.title, PS.course_grade ORDER BY C.title, grade_count DESC;